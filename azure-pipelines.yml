trigger:
- cicd

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

stages:
- stage: Tests
  jobs:
  - job: Tests
    steps:
      - task: UseDotNet@2
        displayName: Install .NET Core
        inputs:
          version: 3.1.x

      - task: DotNetCoreCLI@2
        displayName: Test
        inputs:
          command: 'test'
          arguments: '-c $(buildConfiguration)'
          projects: 'src/MudBlazor.UnitTests/MudBlazor.UnitTests.csproj'
          testRunTitle: 'UnitTest'

- stage: Preview
  jobs:
  - job: Preview
    steps:
      - task: UseDotNet@2
        displayName: Install .NET Core
        inputs:
          version: 3.1.x

      - task: PowerShell@2
        displayName: Update Version
        inputs:
          targetType: 'inline'
          script: |
            $version = ([xml](Get-Content -Raw src/MudBlazor/MudBlazor.csproj))["Project"]["PropertyGroup"]["Version"].InnerText;
            $version += "-preview.$(Build.BuildNumber)";
            Write-Host $version;
            Write-Host "##vso[task.setvariable variable=version]$version";

      - task: PowerShell@2
        displayName: Pack
        inputs:
          targetType: 'inline'
          script: |
            dotnet pack src/MudBlazor/MudBlazor.csproj -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/nuget /p:Version=$(version)
      - task: PowerShell@2
        displayName: Push
        inputs:
          targetType: 'inline'
          script: |
            dotnet nuget push $(Build.ArtifactStagingDirectory)/nuget/*.nupkg -s $(NUGET_API) -k $(NUGET_API_KEY)

      - task: PowerShell@2
        displayName: Publish Docs
        inputs:
          targetType: 'inline'
          script: |
            dotnet publish -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/docs src/MudBlazor.Docs.Server/MudBlazor.Docs.Server.csproj

- stage: Approval
  jobs:
  - deployment: Approval
    displayName: Approval
    environment: 'Approval'

- stage: Production
  jobs:
  - job: Production
    steps:
      - task: UseDotNet@2
        displayName: Install .NET Core
        inputs:
          version: 3.1.x

      - task: PowerShell@2
        displayName: Pack
        inputs:
          targetType: 'inline'
          script: |
            dotnet pack src/MudBlazor/MudBlazor.csproj -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/nuget

      - task: PowerShell@2
        displayName: Push
        inputs:
          targetType: 'inline'
          script: |
            dotnet nuget push $(Build.ArtifactStagingDirectory)/nuget/*.nupkg -s $(NUGET_API) -k $(NUGET_API_KEY)

      - task: PowerShell@2
        displayName: Publish Docs
        inputs:
          targetType: 'inline'
          script: |
            dotnet publish -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/docs src/MudBlazor.Docs.Server/MudBlazor.Docs.Server.csproj